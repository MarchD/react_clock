{"version":3,"sources":["Clock.js","App.js","index.js"],"names":["Clock","state","intervalID","setInterval","date","Date","setState","currentDate","toLocaleTimeString","console","log","this","prevProps","prevName","clockName","currentName","props","show","clearInterval","React","Component","defaultProps","App","isClockVisible","Math","random","className","type","onClick","name","ReactDOM","render","document","getElementById"],"mappings":"uMAGMA,E,4MACJC,MAAQ,G,kEAEa,IAAD,OACZC,EAAaC,aAAY,WAC7B,IAAMC,EAAO,IAAIC,KAEjB,EAAKC,SAAS,CAACC,YAAaH,EAAKI,uBAEjCC,QAAQC,IAAIN,EAAKI,wBAChB,KAEHG,KAAKL,SAAS,CAAEH,YAAaD,M,yCAGZU,GACjB,IAAMC,EAAWD,EAAUE,UACrBC,EAAcJ,KAAKK,MAAMF,UAE3BD,IAAaE,GAEfN,QAAQC,IAAR,qCACgCG,EADhC,eAC+CE,M,6CAM7CJ,KAAKK,MAAMC,MACbC,cAAcP,KAAKV,MAAME,e,+BAK3B,OACE,8BACGQ,KAAKV,MAAMM,iB,GApCAY,IAAMC,WA0CXpB,IAOfA,EAAMqB,aAAe,CACnBP,UAAW,EACXG,MAAM,G,UCEOK,E,4MAlDbrB,MAAQ,CACNsB,gBAAgB,EAChBT,UAAWU,KAAKC,U,uDAGR,IAAD,OACCF,EAAmBZ,KAAKV,MAAxBsB,eAER,OACE,yBAAKG,UAAU,OACb,2CACA,2CAEG,IACAH,GAAkB,kBAAC,EAAUZ,KAAKV,QAEpCsB,EAEG,4BACEI,KAAK,SACLC,QAAS,kBAAM,EAAKtB,SAAS,CAAEiB,gBAAgB,MAFjD,cASA,4BACEI,KAAK,SACLC,QAAS,kBAAM,EAAKtB,SAAS,CAAEiB,gBAAgB,MAFjD,cAQJ,4BACEI,KAAK,SACLC,QAAS,WAGP,OAFA,EAAKtB,SAAS,CAAEQ,UAAWU,KAAKC,WAEzB,kBAAC,EAAD,CAAOI,KAAM,EAAK5B,MAAMa,cALnC,wB,GApCUK,IAAMC,WCDxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e420b048.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {}\n\n  componentDidMount() {\n    const intervalID = setInterval(() => {\n      const date = new Date();\n      // eslint-disable-next-line\n      this.setState({currentDate: date.toLocaleTimeString()});\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n\n    this.setState({ setInterval: intervalID });\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevName = prevProps.clockName;\n    const currentName = this.props.clockName;\n\n    if (prevName !== currentName) {\n      // eslint-disable-next-line no-console\n      console.log(\n        `The Clock was renamed from ${prevName} to ${currentName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.show) {\n      clearInterval(this.state.setInterval);\n    }\n  }\n\n  render() {\n    return (\n      <span>\n        {this.state.currentDate}\n      </span>\n    );\n  }\n}\n\nexport default Clock;\n\nClock.propTypes = {\n  clockName: PropTypes.number,\n  show: PropTypes.bool,\n};\n\nClock.defaultProps = {\n  clockName: 0,\n  show: true,\n};\n","import React from 'react';\nimport Clock from './Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.random(),\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && <Clock {...this.state} />}\n        </p>\n        {isClockVisible\n          ? (\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ isClockVisible: false })}\n            >\n              Hide Clock\n            </button>\n\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ isClockVisible: true })}\n            >\n              Show Clock\n            </button>\n          )}\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.random() });\n\n            return <Clock name={this.state.clockName} />;\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}